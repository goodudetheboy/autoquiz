Computer networking is very complicated
So many protocols and shit
There are many functionality to protect against errors
Error detection and Error recovery

Error detection
Ability for a protocol or program to determine that something is wrong
Example: CRC checks if data is correctly sent
If not, if nee


Error recovery
Ability for a protocol or program to attempt to fix detected error

Things still fuck up
Errors pop up
Misconfigs
Hardware breakdowns
System incompatibilities
How to detect and fix
Windows
Mac OS
Linux

Ping
Problem with establish a connection to a server or a website
Maybe we can connect stuff on LAN but not anywhere else

Problems
Router does not know how to route to a destination
A port is not reachable
TTL datagram and no hops are attempted
We use ICMP

ICMP (Internet Control Message Protocol)
Used to communicate issues
Used by router or remote host to communicate why transmission fails to the source

ICMP packet
Header with fields
Data section 


Type
8 bits
Specifies what type of message is being delivered
Ex:
Destination unreachable
Time exceeded

Code
8 bits
More specific reason for the message than Type
Ex:
Dest. unreachable => destination network unreachable, destination port unreachable

Checksum
16 bits

“Rest of the header”
Yes that’s the name
Optionally used for some specific types or codes to send more data

Data sections
Payload for an ICMP packet
Exists entirely so that recipient of message knows which transmission caused the error being reported
Contains IP header and the first 8 bytes of the offending packet

Not human interactable
Intended for between computer’s automatically
But some are for humans

Ping
Lets you send special ICMP message called Echo request
Computer asks “hey, you there?”
If destination is there and working, just send back ICMP Echo Reply type
Use: ping [ip or FQDN]
Windows:
Each packet display destination and round trip time
TTL remaining and how large the ICMP packet is
Also statistics displayed like packets received
Send only 4 echo requests
MacOS
Run until Ctrl-c
CL flags to change behaviors
How many, how big, or how long among other things

Traceroute
Ping helps understand general quality of connection
Network communications also cross a lot a intermediary nodes
Need to know hops
Use traceroute

Traceroute
Helps you discover path between two nodes and give information between each hops
Manipulation in TTL field 
TTL reaches 0, a ICMP time-exceeded message is sent back to the source
Traceroute use TTL field like this
TTL 1 for first packet
TTL 2 for second packet
TTL3 for third packet
Continues until make it all the way to destination
Will send three identical packets
Linux and MacOS, traceroute sends UDP packets to very high port number
Windows: tracert instead of traceroute, default to using ICMP echo requests

Tools similar to traceroute
mtr on linux and MacOS
pathping on Windows
Long-running traceroute
Can better see how things change over time
Continuously update its output with current aggregate data about traceroute
Pathping runs 50 seconds before delivering data all at once

Testing port connectivity
We can test connectivity between things at the network layer
We would want to do know in transport layer too
Two tools: netcat (linux/macos), Test-NetConnection (win)

Netcat
nc [host] [port] [-z, means zero input] [-v]

Test-NetConnection
[host] [-port]
Host only means send ICMP packet (ping)

Name Resolution Tools
Very important for Internet

Nslookup
For all win, linux, mac
Nslookup for hostname
Output displays what server was used to perform the request and name resolution
Set server [host] to use that to do NS instead of default NS
type=[record] you can see different types of records associated with NS
Set debug

